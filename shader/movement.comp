layout (local_size_x = 1) in;

uniform vec2 time;
uniform vec4 mouse;

#define MOUSE_FORCE 32.0
#define GRAVITY 4.0
#define DAMPEN 0.99995

float xmove(float x, float px, float dt) {
	float dx = x - px;
	float ax = 0.0;
	ax += mouse.z * MOUSE_FORCE * (mouse.x - x);
	return x + DAMPEN * dx + ax * dt * dt;
}

float ymove(float y, float py, float dt) {
	float dy = y - py;
	float ay = 0.0;
	ay -= GRAVITY;
	ay += mouse.z * MOUSE_FORCE * (mouse.y - y);
	return y + DAMPEN * dy + ay * dt * dt;
}

vec2 move(vec2 curr, vec2 prev, float dt) {
	return vec2(xmove(curr.x, prev.x, dt), ymove(curr.y, prev.y, dt));
}

void main(void) {

	uint i = gl_GlobalInvocationID.x;

	vec4 p = Particles[i];

	vec2 curr = p.xy;
	vec2 prev = p.zw;

	float dt = time.y;
	vec2 next = move(curr, prev, dt);

	Particles[i] = vec4(next, curr);
}
